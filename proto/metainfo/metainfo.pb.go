// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metainfo.proto

package metainfo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the source request
type MetaInfoRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaInfoRequest) Reset()         { *m = MetaInfoRequest{} }
func (m *MetaInfoRequest) String() string { return proto.CompactTextString(m) }
func (*MetaInfoRequest) ProtoMessage()    {}
func (*MetaInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_d2823776ee631445, []int{0}
}
func (m *MetaInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaInfoRequest.Unmarshal(m, b)
}
func (m *MetaInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaInfoRequest.Marshal(b, m, deterministic)
}
func (dst *MetaInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaInfoRequest.Merge(dst, src)
}
func (m *MetaInfoRequest) XXX_Size() int {
	return xxx_messageInfo_MetaInfoRequest.Size(m)
}
func (m *MetaInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetaInfoRequest proto.InternalMessageInfo

func (m *MetaInfoRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// The response message containing the metainfo bytes
type MetaInfoReply struct {
	Metainfo             []byte   `protobuf:"bytes,1,opt,name=metainfo,proto3" json:"metainfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaInfoReply) Reset()         { *m = MetaInfoReply{} }
func (m *MetaInfoReply) String() string { return proto.CompactTextString(m) }
func (*MetaInfoReply) ProtoMessage()    {}
func (*MetaInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_metainfo_d2823776ee631445, []int{1}
}
func (m *MetaInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaInfoReply.Unmarshal(m, b)
}
func (m *MetaInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaInfoReply.Marshal(b, m, deterministic)
}
func (dst *MetaInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaInfoReply.Merge(dst, src)
}
func (m *MetaInfoReply) XXX_Size() int {
	return xxx_messageInfo_MetaInfoReply.Size(m)
}
func (m *MetaInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_MetaInfoReply proto.InternalMessageInfo

func (m *MetaInfoReply) GetMetainfo() []byte {
	if m != nil {
		return m.Metainfo
	}
	return nil
}

func init() {
	proto.RegisterType((*MetaInfoRequest)(nil), "metainfo.MetaInfoRequest")
	proto.RegisterType((*MetaInfoReply)(nil), "metainfo.MetaInfoReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetaInfoClient is the client API for MetaInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetaInfoClient interface {
	// Get metainfo
	GetMetaInfo(ctx context.Context, in *MetaInfoRequest, opts ...grpc.CallOption) (*MetaInfoReply, error)
}

type metaInfoClient struct {
	cc *grpc.ClientConn
}

func NewMetaInfoClient(cc *grpc.ClientConn) MetaInfoClient {
	return &metaInfoClient{cc}
}

func (c *metaInfoClient) GetMetaInfo(ctx context.Context, in *MetaInfoRequest, opts ...grpc.CallOption) (*MetaInfoReply, error) {
	out := new(MetaInfoReply)
	err := c.cc.Invoke(ctx, "/metainfo.MetaInfo/GetMetaInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaInfoServer is the server API for MetaInfo service.
type MetaInfoServer interface {
	// Get metainfo
	GetMetaInfo(context.Context, *MetaInfoRequest) (*MetaInfoReply, error)
}

func RegisterMetaInfoServer(s *grpc.Server, srv MetaInfoServer) {
	s.RegisterService(&_MetaInfo_serviceDesc, srv)
}

func _MetaInfo_GetMetaInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaInfoServer).GetMetaInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/metainfo.MetaInfo/GetMetaInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaInfoServer).GetMetaInfo(ctx, req.(*MetaInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetaInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "metainfo.MetaInfo",
	HandlerType: (*MetaInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMetaInfo",
			Handler:    _MetaInfo_GetMetaInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "metainfo.proto",
}

func init() { proto.RegisterFile("metainfo.proto", fileDescriptor_metainfo_d2823776ee631445) }

var fileDescriptor_metainfo_d2823776ee631445 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x4d, 0x2d, 0x49,
	0xcc, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x94,
	0xb9, 0xf8, 0x7d, 0x53, 0x4b, 0x12, 0x3d, 0xf3, 0xd2, 0xf2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x84, 0x04, 0xb8, 0x98, 0x4b, 0x8b, 0x72, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40,
	0x4c, 0x25, 0x6d, 0x2e, 0x5e, 0x84, 0xa2, 0x82, 0x9c, 0x4a, 0x21, 0x29, 0x2e, 0xb8, 0x09, 0x60,
	0x75, 0x3c, 0x41, 0x70, 0xbe, 0x91, 0x3f, 0x17, 0x07, 0x4c, 0xb1, 0x90, 0x33, 0x17, 0xb7, 0x7b,
	0x6a, 0x09, 0x9c, 0x2b, 0xa9, 0x07, 0x77, 0x07, 0x9a, 0xa5, 0x52, 0xe2, 0xd8, 0xa4, 0x0a, 0x72,
	0x2a, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x6e, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x67,
	0x8a, 0xf4, 0xc5, 0x00, 0x00, 0x00,
}
